version: "3"

volumes:
  nextcloud-db:
  nextcloud-app:
  server-certs:
  server-acme:
  server-vhost.d:
  server-html:

networks:
  proxy-tier:

services:
  # MariaDB for data in Nextcloud
  nextcloud-db:
    image: mariadb:10.6
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: always
    volumes:
      - nextcloud-db:/var/lib/mysql:Z
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    env_file:
      - db.env

  # Redis DB for caching Nextcloud
  nextcloud-cache:
    image: redis:alpine
    restart: always

  # The Nextcloud itself
  nextcloud-app:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud-app:/var/www/html:z
    environment:
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-cache
    env_file:
      - db.env
    depends_on:
      - nextcloud-db
      - nextcloud-cache

  # Cron Job for Nextcloud
  nextcloud-cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud-app:/var/www/html:z
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - nextcloud-cache

  # Webserver for the nextcloud
  nextcloud-server:
    build: ./nextcloud-server
    restart: always
    volumes:
      - nextcloud-app:/var/www/html:z,ro
    environment:
      - VIRTUAL_HOST=cloud.queerreferat.ac
      - LETSENCRYPT_HOST=cloud.queerreferat.ac
      - LETSENCRYPT_EMAIL=info@queerreferat.ac
    depends_on:
      - nextcloud-app
    networks:
      - proxy-tier
      - default

  # ADDITIONAL DOCKER CONFIGURATION FOR WORDPRESS SITE & MORE HERE

  # Reverse proxy server to not make nextcloud and website images accessible from outside
  server:
    build: ./server
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - server-certs:/etc/nginx/certs:z,ro
      - server-vhost.d:/etc/nginx/vhost.d:z
      - server-html:/usr/share/nginx/html:z
      - /var/run/docker.sock:/tmp/docker.sock:z,ro
    networks:
      - proxy-tier

  # Lets encrypt companion service to accept https queries
  server-ssl-companion:
    image: nginxproxy/acme-companion
    restart: always
    volumes:
      - server-certs:/etc/nginx/certs:z
      - server-acme:/etc/acme.sh:z
      - server-vhost.d:/etc/nginx/vhost.d:z
      - server-html:/usr/share/nginx/html:z
      - /var/run/docker.sock:/var/run/docker.sock:z,ro
    networks:
      - proxy-tier
    depends_on:
      - server
